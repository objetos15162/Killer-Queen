#BlueJ class context
comment0.target=KillerQueen
comment0.text=\r\n\ Esta\ clase\ se\ encarga\ de\ darle\ todas\ las\ habilidades\ a\ Killer\ Queen,\ brincar,\ correr\ y\ disparar.\r\n\ Asigna\ im\u00E1genes\ que\ simulan\ todos\ los\ tipos\ de\ movimientos\ de\ este\ objeto.\r\n\ @author\ (Evelyn\ G\u00F3mez)\ \r\n\ @version\ Mayo\ 2016)\r\n
comment1.params=
comment1.target=KillerQueen()
comment10.params=
comment10.target=void\ shootImages()
comment10.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ asignar\ las\ im\u00E1genes\ a\ Killer\ Queen\ para\ simular\ el\ movimiento\ del\ jugador\ disparando.\r\n\ Se\ utiliza\ la\ clase\ SimpleTimer,\ cada\ que\ pasan\ 200\ milisegundos,\ hay\ un\ condicional\ verifica\ que\ la\ imagen\ actual\ del\ objeto\ sea\ igual\ a\ la\ imagen\ de\ la\ lista\ \r\n\ de\ im\u00E1genes\ declarada\ en\ el\ constructor,\ iniciando\ en\ el\ \u00EDndice\ 0.\ Si\ es\ verdadero\ entonces\ actualiza\ la\ imagen\ del\ \u00EDndice\ siguiente\ y\ asi\ sucesivamente\ hasta\ llegar\ \r\n\ al\ \u00EDndice\ 2,\ que\ es\ el\ n\u00FAmero\ total\ de\ la\ lista,\ y\ posteriormente\ comienza\ en\ el\ \u00EDndice\ 1\ y\ se\ inicia\ el\ timer\ nuevamente.\ Esto\ se\ repite\ siempre.\r\n
comment11.params=
comment11.target=void\ verifyShoot()
comment11.text=\r\n\ Este\ m\u00E9todo\ verifica\ si\ la\ tecla\ "shift"\ hasido\ presionada.\ Si\ es\ as\u00ED,\ y\ el\ jugador\ no\ esta\ brincando,\ agrega\ un\ objeto\ Bullet\ al\ mundo,\ lo\ que\ simula\ que\ esta\ disparando.\r\n\ Utiliza\ un\ timer\ el\ cual\ verifica\ que\ solo\ se\ agregue\ el\ objeto\ Bullet\ despu\u00E9s\ de\ cierto\ tiempo,\ para\ evitar\ que\ el\ jugador\ dispare\ y\ aparezcan\ muchas\ balas\ al\ mismo\ tiempo.\r\n
comment12.params=
comment12.target=void\ verifyAttack()
comment12.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ dar\ un\ tiempo\ de\ recuperaci\u00F3n\ a\ Killer\ Queen\ cuando\ ha\ sido\ atacada.\r\n
comment13.params=
comment13.target=void\ verifyTrappedCoins()
comment13.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ llevar\ la\ cuenta\ de\ monedas\ que\ han\ sido\ atrapadas.\ Si\ Killer\ Queen\ toca\ al\ objeto\ Coin,\ se\ incrememta\ la\ variable\ trappedCoins,\ y\ se\ actualiza\ el\ \r\n\ contador\ de\ monedas\ atrapadas.\r\n
comment14.params=
comment14.target=int\ getTrappedCoins()
comment14.text=\r\n\ M\u00E9todo\ de\ acceso\ a\ las\ monedas\ atrapadas.\r\n\ @return\ trappedCoins\ El\ n\u00FAmero\ total\ de\ monedas\ atrapadas.\r\n
comment15.params=
comment15.target=int\ getLifes()
comment15.text=\r\n\ M\u00E9todo\ de\ acceso\ a\ las\ vidas\ de\ Killer\ Queen.\r\n\ @return\ lifes\ Vidas\ de\ KillerQueen.\r\n
comment16.params=lifes
comment16.target=void\ setLifes(int)
comment16.text=\r\n\ M\u00E9todo\ de\ modificaci\u00F3n\ a\ las\ vidas\ de\ Killer\ Queen.\r\n
comment2.params=imgNumber\ imgName
comment2.target=java.util.ArrayList\ createImagesArray(int,\ java.lang.String)
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Est\u00E1\ ejecutando\ siempre\ los\ m\u00E9todos\ que\ manda\ llamar.\ Si\ ha\ muerto\ solo\ ejecuta\ el\ m\u00E9todo\ die().\r\n
comment4.params=
comment4.target=void\ run()
comment4.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ asignar\ las\ im\u00E1genes\ a\ Killer\ Queen\ para\ simular\ el\ movimiento\ del\ jugador\ corriendo.\r\n\ Se\ utiliza\ la\ clase\ SimpleTimer,\ cada\ que\ pasan\ 200\ milisegundos,\ hay\ un\ condicional\ verifica\ que\ la\ imagen\ actual\ del\ objeto\ sea\ igual\ a\ la\ imagen\ de\ la\ lista\ \r\n\ de\ im\u00E1genes\ declarada\ en\ el\ constructor,\ iniciando\ en\ el\ \u00EDndice\ 0.\ Si\ es\ verdadero\ entonces\ actualiza\ la\ imagen\ del\ \u00EDndice\ siguiente\ y\ asi\ sucesivamente\ hasta\ llegar\ \r\n\ al\ \u00EDndice\ 8,\ que\ es\ el\ n\u00FAmero\ total\ de\ la\ lista,\ y\ posteriormente\ comienza\ en\ el\ \u00EDndice\ 1\ y\ se\ inicia\ el\ timer\ nuevamente.\ Esto\ se\ repite\ siempre.\r\n
comment5.params=
comment5.target=void\ jumpImages()
comment5.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ asignar\ las\ im\u00E1genes\ a\ Killer\ Queen\ para\ simular\ el\ movimiento\ del\ jugador\ saltando.\r\n\ Se\ utiliza\ la\ clase\ SimpleTimer,\ cada\ que\ pasan\ 200\ milisegundos,\ hay\ un\ condicional\ verifica\ que\ la\ imagen\ actual\ del\ objeto\ sea\ igual\ a\ la\ imagen\ de\ la\ lista\ \r\n\ de\ im\u00E1genes\ declarada\ en\ el\ constructor,\ iniciando\ en\ el\ \u00EDndice\ 0.\ Si\ es\ verdadero\ entonces\ actualiza\ la\ imagen\ del\ \u00EDndice\ siguiente\ y\ asi\ sucesivamente\ hasta\ llegar\ \r\n\ al\ \u00EDndice\ 8,\ que\ es\ el\ n\u00FAmero\ total\ de\ la\ lista,\ y\ posteriormente\ comienza\ en\ el\ \u00EDndice\ 1\ y\ se\ inicia\ el\ timer\ nuevamente.\ Esto\ se\ repite\ siempre.\r\n
comment6.params=
comment6.target=void\ jump()
comment6.text=\r\n\ En\ este\ m\u00E9todo,\ se\ le\ da\ la\ habilidad\ a\ Killer\ Queen\ de\ saltar.\ Cuando\ se\ cumplen\ los\ condicionales,\ se\ le\ da\ una\ nueva\ posici\u00F3n\ a\ Killer\ hacia\ arriba,\ y\ al\ concluir\ el\r\n\ tiempo\ dado,\ regresa\ a\ su\ posici\u00F3n\ inicial\ ,\ lo\ que\ hace\ la\ simulaci\u00F3n\ del\ salto.\r\n
comment7.params=
comment7.target=void\ verifyJump()
comment7.text=\r\n\ Este\ m\u00E9todo\ verifica\ con\ un\ booleano\ si\ la\ tecla\ "space"\ ha\ sido\ presionada.\ Si\ es\ as\u00ED,\ se\ ejecuta\ el\ m\u00E9todo\ jump,\ as\u00ED\ como\ el\ m\u00E9todo\ jumpImages(),\ donde\ se\ asignan\ las\ \r\n\ im\u00E1genes\ que\ simulan\ el\ movimiento\ de\ salto\ de\ Killer\ Queen.\ De\ lo\ contrario\ se\ ejecuta\ el\ m\u00E9todo\ run(),\ donde\ se\ simula\ el\ movimiento\ de\ Killer\ Queen\ corriendo.\r\n
comment8.params=
comment8.target=void\ dieImages()
comment8.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ asignar\ las\ im\u00E1genes\ a\ Killer\ Queen\ para\ simular\ el\ movimiento\ del\ jugador\ muriendo.\r\n\ Se\ utiliza\ la\ clase\ SimpleTimer,\ cada\ que\ pasan\ 200\ milisegundos,\ hay\ un\ condicional\ verifica\ que\ la\ imagen\ actual\ del\ objeto\ sea\ igual\ a\ la\ imagen\ de\ la\ lista\ \r\n\ de\ im\u00E1genes\ declarada\ en\ el\ constructor,\ iniciando\ en\ el\ \u00EDndice\ 0.\ Si\ es\ verdadero\ entonces\ actualiza\ la\ imagen\ del\ \u00EDndice\ siguiente\ y\ asi\ sucesivamente\ hasta\ llegar\ \r\n\ al\ \u00EDndice\ 8,\ que\ es\ el\ n\u00FAmero\ total\ de\ la\ lista,\ y\ posteriormente\ comienza\ en\ el\ \u00EDndice\ 1\ y\ se\ inicia\ el\ timer\ nuevamente.\ Esto\ se\ repite\ siempre.\r\n
comment9.params=
comment9.target=void\ die()
comment9.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ verificar\ con\ un\ boleeano\ si\ el\ jugador\ ha\ perdido\ todas\ sus\ vidas.\ Si\ es\ verdadero,\ ejecuta\ el\ m\u00E9todo\ dieImages(),\ que\ simula\ el\ movimiento\ del\ \r\n\ jugador\ muriendo.\ Despu\u00E9s\ del\ tiempo\ especificado,\ crea\ un\ mundo\ GameOver\ y\ lo\ asigna.\r\n
numComments=17
